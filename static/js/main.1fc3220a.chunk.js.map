{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","message","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","togglemode","aria-checked","htmlFor","defaultProps","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","TextForm","handleclipclick","_ref","_asyncToGenerator","_callee","_context","navigator","clipboard","writeText","text","showalert","apply","arguments","_useState","useState","_useState2","_slicedToArray","setText","Fragment","style","color","heading","class","onChange","event","console","log","target","backgroundColor","onInput","rows","newtext","split","join","App","setmode","_useState3","_useState4","setalert","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1fc3220a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize=(word)=>{\r\n    const lower= word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.message}\r\n       { /*<button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" \r\n        aria-label=\"Close\"></button>*/}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode}  bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    {/*<Link className=\"nav-link\" to=\"/about\">About</Link><Link className=\"navbar-brand\" to=\"/\"><i><b>{props.title}</b></i></Link>*/}\r\n    <a className=\"navbar-brand\" href=\"/\"><i><b>{props.title}</b></i></a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\"><b>Home</b></Link>*/}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\"><b>Home</b></a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n         {/* <Link className=\"nav-link\" to=\"/about\">About</Link>*/}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n      <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" aria-checked=\"true\" id=\"flexSwitchCheckDefault\" />\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> DarkMode</label>\r\n      </div>\r\n  </div>\r\n  {/*<nav className=\"navbar bg-dark\">\r\n  <div className=\"container-fluid\">*/}\r\n    {/*<form className=\"d-flex\" role=\"search\">\r\n      <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n      <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n    </form>*/}\r\n  {/*</div>\r\n</nav>*/}\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes= {title: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title: 'Set Title Here',\r\n}","import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleupclick =()=>{\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext)\r\n        props.showalert(\"Converted to Uppercase\",\"success\")\r\n    }\r\n\r\n    const handleloclick =()=>{\r\n      let newtext = text.toLowerCase();\r\n      setText(newtext);\r\n      props.showalert(\"Converted to Lowercase\",\"success\")\r\n  }\r\n\r\n    const handleclrclick =()=>{\r\n      let newtext = \"\";\r\n      setText(newtext);\r\n      props.showalert(\"Text Cleared Succesfully\",\"success\")\r\n}\r\n\r\n    const inputHandler = (event) => {\r\n      setText(event.target.value);\r\n    }\r\n\r\n    const handleclipclick=async ()=>{\r\n      await navigator.clipboard.writeText(text);\r\n      props.showalert(\"Text Copied To Clipboard\",\"success\")\r\n    }\r\n\r\n    const handleextraspaces=()=>{\r\n      let newtext = text.split(/[ ]+/);\r\n      setText(newtext.join(\" \"));\r\n      props.showalert(\"Removed Extra Spaces\",\"success\")\r\n    }\r\n\r\n    const handleonchange =(event)=>{\r\n      console.log(\"on change\")\r\n      setText(event.target.value)\r\n  }\r\n\r\n    const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h2>{props.heading}</h2>\r\n        <div class=\"mb-3\">\r\n        <textarea class=\"form-control\" value={text} onChange={handleonchange} style={{backgroundColor: props.mode==='light'?'white':'#091836', color:props.mode==='dark'?'white':'black'}} onInput={inputHandler} id=\"mybox\" rows=\"6\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\"onClick={handleupclick}>Convert To Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\"onClick={handleloclick}>Convert To Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\"onClick={handleclrclick}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-2\"onClick={handleclipclick}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-2\"onClick={handleextraspaces}>Remove Extra Spaces</button>\r\n    </div>\r\n\r\n    <div className=\"container my-4\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h2>Your Test Summary</h2>\r\n      <p> {text.split(\" \").length} <b>words and</b> {text.length} <b>characters</b></p>\r\n      <p> {0.008 * text.split(\" \").length} <b>Minutes read</b></p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter your text in Textarea to preview it...\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","\n\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n//import About from './components/About';\nimport React,{ useState } from 'react';\n//import {\n // BrowserRouter as Router, Routes, Route,\n//} from \"react-router-dom\";\n//import { Routes ,Route } from 'react-router-dom';\n\nfunction App() {\n\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showalert =(message,type)=>{\n    setalert({\n      message: message,\n      type: type\n    })\n    \n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n\n\n  const togglemode =()=>{\n    if (mode === 'light'){\n      setmode('dark');\n      document.body.style.backgroundColor ='#091836';\n      showalert(\"Dark Mode Enabled\",\"success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor ='white';\n      showalert(\"Light Mode Enabled\",\"success\")\n    }\n  }\n\n  return (\n    <>\n   {/* <Router  basename=\"/\">*/}\n   { <Navbar title=\"Texting\" mode={mode} togglemode={togglemode}/> }\n      <Alert alert={alert}/>\n    <div className=\"container my-3\">\n      {/*<Routes>\n      <Route exact path='/about' element={<About/>} />\n      <Route exact path='/' element=*/}{<TextForm showalert={showalert} heading=\"Enter the Text here to analyze\" mode={mode}/>} {/*/>\n      </Routes>\n     \n     {/* <About/>*/}\n         </div>\n         {/* </Router>*/}\n    \n    </>\n  );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import {BrowserRouter as Router} from \"react-router-dom\";\n\n//const root = createRoot(document.getElementById(\"root\"));\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}